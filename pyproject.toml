[tool.poetry]
name = "mistral_common"
version = "v1.0.2"
description = ""
authors = ["bam4d <bam4d@mistral.ai>"]
readme = "README.md"
packages = [{ include = "mistral_common", from = "src" }]

[tool.ruff]
lint.select = ["E", "F", "W", "Q", "I"]
lint.ignore = ["E203"]
lint.fixable = ["ALL"]
lint.unfixable = []
line-length = 120
exclude = ["docs", "build"]

[tool.mypy]
disallow_untyped_defs = true
show_error_codes = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
exclude = ["docs", "tools", "build"]

[[tool.mypy.overrides]]
module = "sentencepiece.*"
ignore_missing_imports = true

[tool.poetry.dependencies]
python = "^3.8.10"
pydantic = "2.6.1"
jsonschema = "4.21.1"
sentencepiece = "0.2.0"
typing-extensions = "^4.11.0"

[tool.poetry.group.dev.dependencies]
types-jsonschema = "4.21.0.20240118"
types-protobuf = "4.24.0.20240129"
mypy-protobuf = "^3.5.0"
pytest = "7.4.4"
ruff = "^0.2.2"
mypy = "^1.8.0"
pytest-cov = "^4.1.0"
diff-cover = "^8.0.3"
coverage = {extras = ["toml"], version = "^7.4.4"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["./tests"]

[tool.coverage.run]
omit = ["tests", "*src/mistral_common/data*"]

[tool.coverage.report]
skip_covered = true